2023-07-20 21:18:39,916 p=5940 u=ansible n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-07-20 21:18:39,922 p=5940 u=ansible n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

2023-07-20 21:18:40,074 p=5940 u=ansible n=ansible | PLAY [localhost] *******************************************************************************************************************************
2023-07-20 21:18:40,092 p=5940 u=ansible n=ansible | TASK [include_role : utils] ********************************************************************************************************************
2023-07-20 21:18:40,153 p=5940 u=ansible n=ansible | TASK [utils : include_vars] ********************************************************************************************************************
2023-07-20 21:18:40,305 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:40,316 p=5940 u=ansible n=ansible | TASK [utils : include_vars] ********************************************************************************************************************
2023-07-20 21:18:40,427 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:40,440 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:18:40,530 p=5940 u=ansible n=ansible | ok: [localhost] => {
    "components": [
        "init",
        "cpfs",
        "scheduler",
        "cpd_platform",
        "spss"
    ]
}
2023-07-20 21:18:40,544 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:18:40,631 p=5940 u=ansible n=ansible | skipping: [localhost] => (item=init) 
2023-07-20 21:18:40,653 p=5940 u=ansible n=ansible | skipping: [localhost] => (item=cpfs) 
2023-07-20 21:18:40,676 p=5940 u=ansible n=ansible | skipping: [localhost] => (item=scheduler) 
2023-07-20 21:18:40,697 p=5940 u=ansible n=ansible | skipping: [localhost] => (item=cpd_platform) 
2023-07-20 21:18:40,717 p=5940 u=ansible n=ansible | skipping: [localhost] => (item=spss) 
2023-07-20 21:18:40,742 p=5940 u=ansible n=ansible | TASK [utils : merging release_components_meta and global_components_meta] **********************************************************************
2023-07-20 21:18:40,966 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:40,972 p=5940 u=ansible n=ansible | TASK [utils : merge with override_components_meta] *********************************************************************************************
2023-07-20 21:18:41,049 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:41,060 p=5940 u=ansible n=ansible | TASK [utils : merge with override_components_meta] *********************************************************************************************
2023-07-20 21:18:41,207 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:41,218 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:41,285 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:41,296 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:41,387 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:41,400 p=5940 u=ansible n=ansible | TASK [utils : check openshift cluster status] **************************************************************************************************
2023-07-20 21:18:41,470 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_cluster_healthy.yml for localhost
2023-07-20 21:18:41,489 p=5940 u=ansible n=ansible | TASK [utils : checking ocp cluster connection status] ******************************************************************************************
2023-07-20 21:18:42,784 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:18:42,798 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:18:42,894 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:42,909 p=5940 u=ansible n=ansible | TASK [utils : get cluster arch] ****************************************************************************************************************
2023-07-20 21:18:44,053 p=5993 u=ansible n=ansible | [WARNING]: conditional statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: {{ (kube_arch.stdout |
from_json)['serverVersion'] is defined }}

2023-07-20 21:18:44,076 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:18:44,084 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:44,174 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:44,186 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:44,270 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:44,276 p=5940 u=ansible n=ansible | TASK [utils : include_tasks] *******************************************************************************************************************
2023-07-20 21:18:44,337 p=5940 u=ansible n=ansible | skipping: [localhost] => (item=init) 
2023-07-20 21:18:44,390 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_comp_supported.yml for localhost => (item=cpfs)
2023-07-20 21:18:44,394 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_comp_supported.yml for localhost => (item=scheduler)
2023-07-20 21:18:44,397 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_comp_supported.yml for localhost => (item=cpd_platform)
2023-07-20 21:18:44,401 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_comp_supported.yml for localhost => (item=spss)
2023-07-20 21:18:44,407 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:44,508 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:44,514 p=5940 u=ansible n=ansible | TASK [utils : fail if component is not supoorted on current architecture] **********************************************************************
2023-07-20 21:18:44,569 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:44,575 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:44,637 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:44,649 p=5940 u=ansible n=ansible | TASK [utils : fail if component is not supoorted on current architecture] **********************************************************************
2023-07-20 21:18:44,720 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:44,733 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:44,827 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:44,837 p=5940 u=ansible n=ansible | TASK [utils : fail if component is not supoorted on current architecture] **********************************************************************
2023-07-20 21:18:44,889 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:44,894 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:44,950 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:44,956 p=5940 u=ansible n=ansible | TASK [utils : fail if component is not supoorted on current architecture] **********************************************************************
2023-07-20 21:18:45,009 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:45,015 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:18:45,036 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:45,042 p=5940 u=ansible n=ansible | TASK [utils : Print trace information] *********************************************************************************************************
2023-07-20 21:18:45,826 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:45,837 p=5940 u=ansible n=ansible | TASK [utils : remove any existing generated preview sh script] *********************************************************************************
2023-07-20 21:18:45,921 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:45,934 p=5940 u=ansible n=ansible | TASK [utils : remove any existing generated preview yaml file] *********************************************************************************
2023-07-20 21:18:46,001 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:46,048 p=5940 u=ansible n=ansible | TASK [utils : Create CPFS namespace if not present cp4d] ***************************************************************************************
2023-07-20 21:18:46,096 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:46,116 p=5940 u=ansible n=ansible | TASK [utils : Create cpd operator namespace if not present cp4d] *******************************************************************************
2023-07-20 21:18:46,170 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:46,180 p=5940 u=ansible n=ansible | TASK [utils : ensure operator group for cp4d namespace] ****************************************************************************************
2023-07-20 21:18:46,213 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:46,223 p=5940 u=ansible n=ansible | TASK [utils : ensure operator group for cp4d namespace] ****************************************************************************************
2023-07-20 21:18:46,280 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:46,292 p=5940 u=ansible n=ansible | TASK [include_role : utils] ********************************************************************************************************************
2023-07-20 21:18:46,380 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:46,417 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:46,421 p=5940 u=ansible n=ansible | TASK [utils : print preview opreq] *************************************************************************************************************
2023-07-20 21:18:46,461 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:46,479 p=5940 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ************************************************************************************
2023-07-20 21:18:48,245 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:48,258 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:18:48,321 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:48,338 p=5940 u=ansible n=ansible | TASK [utils : Create cpd instance namespace if not present cp4d] *******************************************************************************
2023-07-20 21:18:48,391 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:48,397 p=5940 u=ansible n=ansible | TASK [utils : waiting for cpfs and odlm CRDs to come online] ***********************************************************************************
2023-07-20 21:18:48,436 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:48,447 p=5940 u=ansible n=ansible | TASK [utils : create operand request for instance namespace if not present] ********************************************************************
2023-07-20 21:18:50,686 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:50,700 p=5940 u=ansible n=ansible | TASK [include_role : utils] ********************************************************************************************************************
2023-07-20 21:18:50,794 p=5940 u=ansible n=ansible | TASK [utils : merge release_components_meta and override_components_meta] **********************************************************************
2023-07-20 21:18:50,832 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:50,838 p=5940 u=ansible n=ansible | TASK [utils : set cm_components_meta when not override] ****************************************************************************************
2023-07-20 21:18:50,889 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:50,894 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:50,920 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:50,926 p=5940 u=ansible n=ansible | TASK [utils : print preview ConfigMap] *********************************************************************************************************
2023-07-20 21:18:50,959 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:50,972 p=5940 u=ansible n=ansible | TASK [utils : create a configmap olm-utils-cm to save components versions] *********************************************************************
2023-07-20 21:18:53,026 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:18:53,035 p=5940 u=ansible n=ansible | TASK [include_role : utils] ********************************************************************************************************************
2023-07-20 21:18:53,067 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:53,073 p=5940 u=ansible n=ansible | TASK [include_role : utils] ********************************************************************************************************************
2023-07-20 21:18:53,143 p=5940 u=ansible n=ansible | TASK [utils : applying multiple CRs for control plane namespace] *******************************************************************************
2023-07-20 21:18:53,195 p=5940 u=ansible n=ansible | skipping: [localhost] => (item=init) 
2023-07-20 21:18:53,208 p=5940 u=ansible n=ansible | skipping: [localhost] => (item=cpfs) 
2023-07-20 21:18:53,277 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/apply_cr_for_kind.yml for localhost => (item=scheduler)
2023-07-20 21:18:53,289 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/apply_cr_for_kind.yml for localhost => (item=cpd_platform)
2023-07-20 21:18:53,298 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/apply_cr_for_kind.yml for localhost => (item=spss)
2023-07-20 21:18:53,306 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:53,338 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:53,345 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:18:53,377 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:53,393 p=5940 u=ansible n=ansible | TASK [utils : fetch the Scheduling CR if it exists] ********************************************************************************************
2023-07-20 21:18:53,435 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:53,446 p=5940 u=ansible n=ansible | TASK [utils :  Use default cr-name for component 'scheduler'] **********************************************************************************
2023-07-20 21:18:53,530 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:53,536 p=5940 u=ansible n=ansible | TASK [utils : dispaly cr_name] *****************************************************************************************************************
2023-07-20 21:18:53,577 p=5940 u=ansible n=ansible | ok: [localhost] => {
    "list_of_cr_name": [
        "ibm-cpd-scheduler"
    ]
}
2023-07-20 21:18:53,590 p=5940 u=ansible n=ansible | TASK [utils : trigger pre apply-cr patching] ***************************************************************************************************
2023-07-20 21:18:53,669 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/exe_run.yml for localhost
2023-07-20 21:18:53,682 p=5940 u=ansible n=ansible | TASK [utils : checking if preview] *************************************************************************************************************
2023-07-20 21:18:53,727 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:53,739 p=5940 u=ansible n=ansible | TASK [utils : checking if yaml dry run case] ***************************************************************************************************
2023-07-20 21:18:53,782 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:53,788 p=5940 u=ansible n=ansible | TASK [utils :  check if must run ..] ***********************************************************************************************************
2023-07-20 21:18:53,819 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:53,825 p=5940 u=ansible n=ansible | TASK [utils :  if not to run..] ****************************************************************************************************************
2023-07-20 21:18:53,864 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:53,875 p=5940 u=ansible n=ansible | TASK [utils : pre- apply-cr release patching (if any) for scheduler] ***************************************************************************
2023-07-20 21:18:54,404 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:18:54,434 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 21:18:54,480 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:54,492 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 21:18:54,532 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:54,538 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:18:54,572 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:54,578 p=5940 u=ansible n=ansible | TASK [utils : Reconcile storage_vendor selection] **********************************************************************************************
2023-07-20 21:18:54,608 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/handle_storage_vendor.yml for localhost
2023-07-20 21:18:54,625 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:54,672 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:54,679 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:18:54,739 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:54,755 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:54,810 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:54,816 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:54,854 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:54,860 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:54,916 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:54,923 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:18:54,972 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:54,980 p=5940 u=ansible n=ansible | TASK [utils : applying multiple CRs] ***********************************************************************************************************
2023-07-20 21:18:55,093 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/apply_cr.yml for localhost => (item=ibm-cpd-scheduler)
2023-07-20 21:18:55,116 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:18:55,149 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:55,155 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:18:55,187 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:55,194 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:55,227 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:55,235 p=5940 u=ansible n=ansible | TASK [utils : print preview CR] ****************************************************************************************************************
2023-07-20 21:18:55,268 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:55,275 p=5940 u=ansible n=ansible | TASK [utils : check storage class availablity] *************************************************************************************************
2023-07-20 21:18:55,342 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_sc_availability.yml for localhost
2023-07-20 21:18:55,355 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:18:55,402 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:55,420 p=5940 u=ansible n=ansible | TASK [utils : check storage_class  availablity] ************************************************************************************************
2023-07-20 21:18:55,470 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:55,479 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:18:55,526 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:55,542 p=5940 u=ansible n=ansible | TASK [utils : check file_storage_class ibmc-file-gold-gid availablity] *************************************************************************
2023-07-20 21:18:57,042 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:57,055 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:18:57,121 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:57,136 p=5940 u=ansible n=ansible | TASK [utils : check block_storage_class ibmc-file-gold-gid availablity] ************************************************************************
2023-07-20 21:18:58,669 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:18:58,683 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:18:58,737 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:58,751 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:18:58,806 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:18:58,824 p=5940 u=ansible n=ansible | TASK [utils : verify if the package ibm-cpd-scheduling-operator  is available for use in the cp4d namespace] ***********************************
2023-07-20 21:19:00,888 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:19:00,910 p=5940 u=ansible n=ansible | TASK [utils : verify if the CRD is present scheduler.spectrumcomputing.ibm.com v1 Scheduling] **************************************************
2023-07-20 21:19:02,554 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:19:02,570 p=5940 u=ansible n=ansible | TASK [utils : applying CR ibm-cpd-scheduler for Scheduling Service] ****************************************************************************
2023-07-20 21:19:05,113 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:19:05,134 p=5940 u=ansible n=ansible | TASK [utils : Pause for "1" seconds to let OLM trigger changes (to avoid getting confused by existing state)] **********************************
2023-07-20 21:19:05,179 p=6304 u=ansible n=ansible | Pausing for 1 seconds
2023-07-20 21:19:05,180 p=6304 u=ansible n=ansible | (ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
2023-07-20 21:19:06,196 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:19:06,242 p=5940 u=ansible n=ansible | TASK [utils : check if CR status indicates completion for ibm-cpd-scheduler in cp4d, max retry 15 times 300s delay] ****************************
2023-07-20 21:19:07,961 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibm-cpd-scheduler in cp4d, max retry 15 times 300s delay [0m[38;5;11m(15 Retries left)
2023-07-20 21:24:09,587 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibm-cpd-scheduler in cp4d, max retry 15 times 300s delay [0m[38;5;11m(14 Retries left)
2023-07-20 21:29:11,277 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:11,286 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:29:11,345 p=5940 u=ansible n=ansible | ok: [localhost] => {
    "msg": {
        "api_found": true,
        "attempts": 3,
        "changed": false,
        "failed": false,
        "resources": [
            {
                "apiVersion": "scheduler.spectrumcomputing.ibm.com/v1",
                "kind": "Scheduling",
                "metadata": {
                    "creationTimestamp": "2023-07-20T21:19:04Z",
                    "finalizers": [
                        "scheduler.spectrumcomputing.ibm.com/finalizer"
                    ],
                    "generation": 1,
                    "labels": {
                        "release": "cpd-scheduler"
                    },
                    "managedFields": [
                        {
                            "apiVersion": "scheduler.spectrumcomputing.ibm.com/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:labels": {
                                        ".": {},
                                        "f:release": {}
                                    }
                                },
                                "f:spec": {
                                    ".": {},
                                    "f:license": {
                                        ".": {},
                                        "f:accept": {}
                                    },
                                    "f:registry": {},
                                    "f:runPodsOnManagementNodes": {},
                                    "f:setPodPriority": {},
                                    "f:storageClass": {},
                                    "f:version": {}
                                }
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2023-07-20T21:19:04Z"
                        },
                        {
                            "apiVersion": "scheduler.spectrumcomputing.ibm.com/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:metadata": {
                                    "f:finalizers": {
                                        ".": {},
                                        "v:\"scheduler.spectrumcomputing.ibm.com/finalizer\"": {}
                                    }
                                }
                            },
                            "manager": "ansible-operator",
                            "operation": "Update",
                            "time": "2023-07-20T21:19:04Z"
                        },
                        {
                            "apiVersion": "scheduler.spectrumcomputing.ibm.com/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:status": {
                                    ".": {},
                                    "f:conditions": {}
                                }
                            },
                            "manager": "ansible-operator",
                            "operation": "Update",
                            "subresource": "status",
                            "time": "2023-07-20T21:19:04Z"
                        },
                        {
                            "apiVersion": "scheduler.spectrumcomputing.ibm.com/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:status": {
                                    "f:cpd-schedulingStatus": {},
                                    "f:message": {},
                                    "f:operatorBuild": {},
                                    "f:versions": {
                                        ".": {},
                                        "f:reconciled": {}
                                    }
                                }
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "subresource": "status",
                            "time": "2023-07-20T21:21:34Z"
                        }
                    ],
                    "name": "ibm-cpd-scheduler",
                    "namespace": "cp4d",
                    "resourceVersion": "2451181",
                    "uid": "69c35b99-d665-4b12-af66-7cfac83d395c"
                },
                "spec": {
                    "license": {
                        "accept": true
                    },
                    "registry": "cp.icr.io/cp/cpd",
                    "runPodsOnManagementNodes": false,
                    "setPodPriority": true,
                    "storageClass": "ibmc-file-gold-gid",
                    "version": "1.12.0"
                },
                "status": {
                    "conditions": [
                        {
                            "lastTransitionTime": "2023-07-20T21:21:35Z",
                            "message": "",
                            "reason": "",
                            "status": "False",
                            "type": "Failure"
                        },
                        {
                            "ansibleResult": {
                                "changed": 7,
                                "completion": "2023-07-20T21:24:55.271436",
                                "failures": 0,
                                "ok": 177,
                                "skipped": 83
                            },
                            "lastTransitionTime": "2023-07-20T21:19:04Z",
                            "message": "Awaiting next reconciliation",
                            "reason": "Successful",
                            "status": "True",
                            "type": "Running"
                        },
                        {
                            "lastTransitionTime": "2023-07-20T21:24:55Z",
                            "message": "Last reconciliation succeeded",
                            "reason": "Successful",
                            "status": "True",
                            "type": "Successful"
                        }
                    ],
                    "cpd-schedulingStatus": "Completed",
                    "message": "The install has finished.  All pods are running and ready.",
                    "operatorBuild": "1.12.0+20230427.000027.88408ec",
                    "versions": {
                        "reconciled": "1.12.0"
                    }
                }
            }
        ]
    }
}
2023-07-20 21:29:11,358 p=5940 u=ansible n=ansible | TASK [utils : trigger post CR task for Scheduling Service if any] ******************************************************************************
2023-07-20 21:29:11,405 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:11,418 p=5940 u=ansible n=ansible | TASK [utils : trigger post apply-cr patching] **************************************************************************************************
2023-07-20 21:29:11,464 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/exe_run.yml for localhost
2023-07-20 21:29:11,485 p=5940 u=ansible n=ansible | TASK [utils : checking if preview] *************************************************************************************************************
2023-07-20 21:29:11,529 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:11,537 p=5940 u=ansible n=ansible | TASK [utils : checking if yaml dry run case] ***************************************************************************************************
2023-07-20 21:29:11,579 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:11,584 p=5940 u=ansible n=ansible | TASK [utils :  check if must run ..] ***********************************************************************************************************
2023-07-20 21:29:11,615 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:11,622 p=5940 u=ansible n=ansible | TASK [utils :  if not to run..] ****************************************************************************************************************
2023-07-20 21:29:11,654 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:11,666 p=5940 u=ansible n=ansible | TASK [utils : post- apply-cr release patching (if any) for scheduler] **************************************************************************
2023-07-20 21:29:12,178 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:29:12,191 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 21:29:12,234 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:12,247 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 21:29:12,284 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:12,290 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:29:12,322 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:12,328 p=5940 u=ansible n=ansible | TASK [utils : clean up the var cr_name] ********************************************************************************************************
2023-07-20 21:29:12,353 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:12,359 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:29:12,383 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:12,388 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:29:12,423 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:12,437 p=5940 u=ansible n=ansible | TASK [utils : fetch the Ibmcpd CR if it exists] ************************************************************************************************
2023-07-20 21:29:12,466 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:12,476 p=5940 u=ansible n=ansible | TASK [utils :  Use default cr-name for component 'cpd_platform'] *******************************************************************************
2023-07-20 21:29:12,520 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:12,525 p=5940 u=ansible n=ansible | TASK [utils : dispaly cr_name] *****************************************************************************************************************
2023-07-20 21:29:12,555 p=5940 u=ansible n=ansible | ok: [localhost] => {
    "list_of_cr_name": [
        "ibmcpd-cr"
    ]
}
2023-07-20 21:29:12,561 p=5940 u=ansible n=ansible | TASK [utils : trigger pre apply-cr patching] ***************************************************************************************************
2023-07-20 21:29:12,601 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/exe_run.yml for localhost
2023-07-20 21:29:12,612 p=5940 u=ansible n=ansible | TASK [utils : checking if preview] *************************************************************************************************************
2023-07-20 21:29:12,643 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:12,650 p=5940 u=ansible n=ansible | TASK [utils : checking if yaml dry run case] ***************************************************************************************************
2023-07-20 21:29:12,678 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:12,685 p=5940 u=ansible n=ansible | TASK [utils :  check if must run ..] ***********************************************************************************************************
2023-07-20 21:29:12,707 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:12,713 p=5940 u=ansible n=ansible | TASK [utils :  if not to run..] ****************************************************************************************************************
2023-07-20 21:29:12,745 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:12,756 p=5940 u=ansible n=ansible | TASK [utils : pre- apply-cr release patching (if any) for cpd_platform] ************************************************************************
2023-07-20 21:29:13,281 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:29:13,304 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 21:29:13,360 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:13,376 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 21:29:13,427 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:13,434 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:29:13,491 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:13,498 p=5940 u=ansible n=ansible | TASK [utils : Reconcile storage_vendor selection] **********************************************************************************************
2023-07-20 21:29:13,539 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/handle_storage_vendor.yml for localhost
2023-07-20 21:29:13,560 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:29:13,612 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:13,621 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:29:13,673 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:13,680 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:29:13,735 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:13,744 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:29:13,783 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:13,790 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:29:13,853 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:13,871 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:29:13,910 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:13,918 p=5940 u=ansible n=ansible | TASK [utils : applying multiple CRs] ***********************************************************************************************************
2023-07-20 21:29:13,977 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/apply_cr.yml for localhost => (item=ibmcpd-cr)
2023-07-20 21:29:14,012 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:29:14,041 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:14,048 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 21:29:14,087 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:14,093 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:29:14,128 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:14,134 p=5940 u=ansible n=ansible | TASK [utils : print preview CR] ****************************************************************************************************************
2023-07-20 21:29:14,173 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:14,182 p=5940 u=ansible n=ansible | TASK [utils : check storage class availablity] *************************************************************************************************
2023-07-20 21:29:14,237 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_sc_availability.yml for localhost
2023-07-20 21:29:14,248 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 21:29:14,290 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:14,302 p=5940 u=ansible n=ansible | TASK [utils : check storage_class  availablity] ************************************************************************************************
2023-07-20 21:29:14,341 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:14,355 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:29:14,393 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:14,402 p=5940 u=ansible n=ansible | TASK [utils : check file_storage_class ibmc-file-gold-gid availablity] *************************************************************************
2023-07-20 21:29:16,044 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:16,059 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:29:16,121 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:16,131 p=5940 u=ansible n=ansible | TASK [utils : check block_storage_class ibmc-file-gold-gid availablity] ************************************************************************
2023-07-20 21:29:17,628 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:17,634 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:29:17,685 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:17,692 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 21:29:17,741 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:29:17,760 p=5940 u=ansible n=ansible | TASK [utils : verify if the package cpd-platform-operator  is available for use in the cp4d namespace] *****************************************
2023-07-20 21:29:19,615 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:19,661 p=5940 u=ansible n=ansible | TASK [utils : verify if the CRD is present cpd.ibm.com v1 Ibmcpd] ******************************************************************************
2023-07-20 21:29:21,272 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:21,305 p=5940 u=ansible n=ansible | TASK [utils : applying CR ibmcpd-cr for Cloud Pak for Data Control Plane] **********************************************************************
2023-07-20 21:29:23,466 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:29:23,485 p=5940 u=ansible n=ansible | TASK [utils : Pause for "1" seconds to let OLM trigger changes (to avoid getting confused by existing state)] **********************************
2023-07-20 21:29:23,547 p=8023 u=ansible n=ansible | Pausing for 1 seconds
2023-07-20 21:29:23,548 p=8023 u=ansible n=ansible | (ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
2023-07-20 21:29:24,563 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:29:24,596 p=5940 u=ansible n=ansible | TASK [utils : check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay] ************************************
2023-07-20 21:29:26,235 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(25 Retries left)
2023-07-20 21:34:27,916 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(24 Retries left)
2023-07-20 21:39:29,873 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(23 Retries left)
2023-07-20 21:44:31,725 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(22 Retries left)
2023-07-20 21:49:33,456 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(21 Retries left)
2023-07-20 21:54:35,361 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(20 Retries left)
2023-07-20 21:59:37,440 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(19 Retries left)
2023-07-20 22:04:39,354 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(18 Retries left)
2023-07-20 22:09:41,240 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(17 Retries left)
2023-07-20 22:14:43,078 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for ibmcpd-cr in cp4d, max retry 25 times 300s delay [0m[38;5;11m(16 Retries left)
2023-07-20 22:19:44,933 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:44,948 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 22:19:45,004 p=5940 u=ansible n=ansible | ok: [localhost] => {
    "msg": {
        "api_found": true,
        "attempts": 11,
        "changed": false,
        "failed": false,
        "resources": [
            {
                "apiVersion": "cpd.ibm.com/v1",
                "kind": "Ibmcpd",
                "metadata": {
                    "creationTimestamp": "2023-07-20T21:29:23Z",
                    "generation": 1,
                    "managedFields": [
                        {
                            "apiVersion": "cpd.ibm.com/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:spec": {
                                    ".": {},
                                    "f:blockStorageClass": {},
                                    "f:csNamespace": {},
                                    "f:fileStorageClass": {},
                                    "f:license": {
                                        ".": {},
                                        "f:accept": {},
                                        "f:license": {}
                                    },
                                    "f:version": {}
                                }
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "time": "2023-07-20T21:29:23Z"
                        },
                        {
                            "apiVersion": "cpd.ibm.com/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:status": {
                                    ".": {},
                                    "f:conditions": {}
                                }
                            },
                            "manager": "ansible-operator",
                            "operation": "Update",
                            "subresource": "status",
                            "time": "2023-07-20T21:29:23Z"
                        },
                        {
                            "apiVersion": "cpd.ibm.com/v1",
                            "fieldsType": "FieldsV1",
                            "fieldsV1": {
                                "f:status": {
                                    "f:controlPlaneOperatorVersion": {},
                                    "f:controlPlaneStatus": {},
                                    "f:lastReconcileEnd": {},
                                    "f:lastReconcileStart": {}
                                }
                            },
                            "manager": "OpenAPI-Generator",
                            "operation": "Update",
                            "subresource": "status",
                            "time": "2023-07-20T22:15:07Z"
                        }
                    ],
                    "name": "ibmcpd-cr",
                    "namespace": "cp4d",
                    "resourceVersion": "2527085",
                    "uid": "1cc9402d-5c98-469f-90f8-b0647b6853a5"
                },
                "spec": {
                    "blockStorageClass": "ibmc-file-gold-gid",
                    "csNamespace": "cp4d",
                    "fileStorageClass": "ibmc-file-gold-gid",
                    "license": {
                        "accept": true,
                        "license": "Enterprise"
                    },
                    "version": "4.6.6"
                },
                "status": {
                    "conditions": [
                        {
                            "ansibleResult": {
                                "changed": 11,
                                "completion": "2023-07-20T22:15:07.330927",
                                "failures": 0,
                                "ok": 53,
                                "skipped": 22
                            },
                            "lastTransitionTime": "2023-07-20T21:29:23Z",
                            "message": "Awaiting next reconciliation",
                            "reason": "Successful",
                            "status": "True",
                            "type": "Running"
                        },
                        {
                            "lastTransitionTime": "2023-07-20T22:15:07Z",
                            "message": "Last reconciliation succeeded",
                            "reason": "Successful",
                            "status": "True",
                            "type": "Successful"
                        },
                        {
                            "lastTransitionTime": "2023-07-20T22:15:07Z",
                            "message": "",
                            "reason": "",
                            "status": "False",
                            "type": "Failure"
                        }
                    ],
                    "controlPlaneOperatorVersion": "cpdPlatform operator 3.8.0 build 3",
                    "controlPlaneStatus": "Completed",
                    "lastReconcileEnd": "2023-07-20_22:15:05",
                    "lastReconcileStart": "2023-07-20_21:29:26"
                }
            }
        ]
    }
}
2023-07-20 22:19:45,034 p=5940 u=ansible n=ansible | TASK [utils : trigger post CR task for Cloud Pak for Data Control Plane if any] ****************************************************************
2023-07-20 22:19:45,145 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/ibmcpd_post_cr.yml for localhost
2023-07-20 22:19:45,176 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 22:19:45,233 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:45,241 p=5940 u=ansible n=ansible | TASK [utils : pinning zen version if it is lower than 4.5.0] ***********************************************************************************
2023-07-20 22:19:45,297 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:45,332 p=5940 u=ansible n=ansible | TASK [utils : check if CR status indicates completion for lite-cr, max retry 25 times 300s delay] **********************************************
2023-07-20 22:19:45,396 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:45,425 p=5940 u=ansible n=ansible | TASK [utils : check if CR status indicates completion for ibmcpd-cr, max retry 25 times 300s delay] ********************************************
2023-07-20 22:19:45,478 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:45,493 p=5940 u=ansible n=ansible | TASK [utils : trigger post apply-cr patching] **************************************************************************************************
2023-07-20 22:19:45,534 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/exe_run.yml for localhost
2023-07-20 22:19:45,560 p=5940 u=ansible n=ansible | TASK [utils : checking if preview] *************************************************************************************************************
2023-07-20 22:19:45,610 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:45,618 p=5940 u=ansible n=ansible | TASK [utils : checking if yaml dry run case] ***************************************************************************************************
2023-07-20 22:19:45,673 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:45,686 p=5940 u=ansible n=ansible | TASK [utils :  check if must run ..] ***********************************************************************************************************
2023-07-20 22:19:45,730 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:45,737 p=5940 u=ansible n=ansible | TASK [utils :  if not to run..] ****************************************************************************************************************
2023-07-20 22:19:45,784 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:45,812 p=5940 u=ansible n=ansible | TASK [utils : post- apply-cr release patching (if any) for cpd_platform] ***********************************************************************
2023-07-20 22:19:46,431 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 22:19:46,445 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 22:19:46,500 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:46,523 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 22:19:46,576 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:46,588 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 22:19:46,638 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:46,648 p=5940 u=ansible n=ansible | TASK [utils : clean up the var cr_name] ********************************************************************************************************
2023-07-20 22:19:46,693 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:46,705 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 22:19:46,735 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:46,741 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 22:19:46,772 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:46,785 p=5940 u=ansible n=ansible | TASK [utils : fetch the Spss CR if it exists] **************************************************************************************************
2023-07-20 22:19:46,823 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:46,832 p=5940 u=ansible n=ansible | TASK [utils :  Use default cr-name for component 'spss'] ***************************************************************************************
2023-07-20 22:19:46,905 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:46,910 p=5940 u=ansible n=ansible | TASK [utils : dispaly cr_name] *****************************************************************************************************************
2023-07-20 22:19:46,939 p=5940 u=ansible n=ansible | ok: [localhost] => {
    "list_of_cr_name": [
        "spss-sample"
    ]
}
2023-07-20 22:19:46,944 p=5940 u=ansible n=ansible | TASK [utils : trigger pre apply-cr patching] ***************************************************************************************************
2023-07-20 22:19:46,985 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/exe_run.yml for localhost
2023-07-20 22:19:46,995 p=5940 u=ansible n=ansible | TASK [utils : checking if preview] *************************************************************************************************************
2023-07-20 22:19:47,035 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:47,041 p=5940 u=ansible n=ansible | TASK [utils : checking if yaml dry run case] ***************************************************************************************************
2023-07-20 22:19:47,090 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:47,103 p=5940 u=ansible n=ansible | TASK [utils :  check if must run ..] ***********************************************************************************************************
2023-07-20 22:19:47,141 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:47,147 p=5940 u=ansible n=ansible | TASK [utils :  if not to run..] ****************************************************************************************************************
2023-07-20 22:19:47,186 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:47,197 p=5940 u=ansible n=ansible | TASK [utils : pre- apply-cr release patching (if any) for spss] ********************************************************************************
2023-07-20 22:19:47,790 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 22:19:47,817 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 22:19:47,878 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:47,898 p=5940 u=ansible n=ansible | TASK [utils : lineinfile] **********************************************************************************************************************
2023-07-20 22:19:47,945 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:47,950 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 22:19:47,999 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,005 p=5940 u=ansible n=ansible | TASK [utils : Reconcile storage_vendor selection] **********************************************************************************************
2023-07-20 22:19:48,039 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/handle_storage_vendor.yml for localhost
2023-07-20 22:19:48,056 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 22:19:48,118 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:48,131 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 22:19:48,211 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,224 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 22:19:48,296 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,307 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 22:19:48,375 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,388 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 22:19:48,457 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,469 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 22:19:48,529 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,541 p=5940 u=ansible n=ansible | TASK [utils : applying multiple CRs] ***********************************************************************************************************
2023-07-20 22:19:48,642 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/apply_cr.yml for localhost => (item=spss-sample)
2023-07-20 22:19:48,669 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 22:19:48,702 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,708 p=5940 u=ansible n=ansible | TASK [utils : debug] ***************************************************************************************************************************
2023-07-20 22:19:48,756 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,761 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 22:19:48,801 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,807 p=5940 u=ansible n=ansible | TASK [utils : print preview CR] ****************************************************************************************************************
2023-07-20 22:19:48,842 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:48,848 p=5940 u=ansible n=ansible | TASK [utils : check storage class availablity] *************************************************************************************************
2023-07-20 22:19:48,892 p=5940 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_sc_availability.yml for localhost
2023-07-20 22:19:48,904 p=5940 u=ansible n=ansible | TASK [utils : set_fact] ************************************************************************************************************************
2023-07-20 22:19:48,955 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:48,966 p=5940 u=ansible n=ansible | TASK [utils : check storage_class  availablity] ************************************************************************************************
2023-07-20 22:19:49,018 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:49,024 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 22:19:49,072 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:49,081 p=5940 u=ansible n=ansible | TASK [utils : check file_storage_class ibmc-file-gold-gid availablity] *************************************************************************
2023-07-20 22:19:50,941 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:50,956 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 22:19:51,027 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:51,048 p=5940 u=ansible n=ansible | TASK [utils : check block_storage_class ibmc-file-gold-gid availablity] ************************************************************************
2023-07-20 22:19:52,676 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:52,691 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 22:19:52,763 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:52,779 p=5940 u=ansible n=ansible | TASK [utils : fail] ****************************************************************************************************************************
2023-07-20 22:19:52,838 p=5940 u=ansible n=ansible | skipping: [localhost]
2023-07-20 22:19:52,871 p=5940 u=ansible n=ansible | TASK [utils : verify if the package ibm-cpd-spss  is available for use in the cp4d namespace] **************************************************
2023-07-20 22:19:54,882 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:54,924 p=5940 u=ansible n=ansible | TASK [utils : verify if the CRD is present spssmodeler.cpd.ibm.com v1 Spss] ********************************************************************
2023-07-20 22:19:56,663 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:19:56,694 p=5940 u=ansible n=ansible | TASK [utils : applying CR spss-sample for SPSS Modeler] ****************************************************************************************
2023-07-20 22:19:58,929 p=5940 u=ansible n=ansible | changed: [localhost]
2023-07-20 22:19:58,940 p=5940 u=ansible n=ansible | TASK [utils : Pause for "1" seconds to let OLM trigger changes (to avoid getting confused by existing state)] **********************************
2023-07-20 22:19:58,973 p=9352 u=ansible n=ansible | Pausing for 1 seconds
2023-07-20 22:19:58,973 p=9352 u=ansible n=ansible | (ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
2023-07-20 22:19:59,991 p=5940 u=ansible n=ansible | ok: [localhost]
2023-07-20 22:20:00,047 p=5940 u=ansible n=ansible | TASK [utils : check if CR status indicates completion for spss-sample in cp4d, max retry 10 times 300s delay] **********************************
2023-07-20 22:20:01,829 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for spss-sample in cp4d, max retry 10 times 300s delay [0m[38;5;11m(10 Retries left)
2023-07-20 22:25:03,733 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for spss-sample in cp4d, max retry 10 times 300s delay [0m[38;5;11m(9 Retries left)
2023-07-20 22:30:05,447 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for spss-sample in cp4d, max retry 10 times 300s delay [0m[38;5;11m(8 Retries left)
2023-07-20 22:35:07,074 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for spss-sample in cp4d, max retry 10 times 300s delay [0m[38;5;11m(7 Retries left)
2023-07-20 22:40:08,700 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for spss-sample in cp4d, max retry 10 times 300s delay [0m[38;5;11m(6 Retries left)
2023-07-20 22:45:10,327 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for spss-sample in cp4d, max retry 10 times 300s delay [0m[38;5;11m(5 Retries left)
2023-07-20 22:50:11,906 p=5940 u=ansible n=ansible | Not ready yet - Retrying: check if CR status indicates completion for spss-sample in cp4d, max retry 10 times 300s delay [0m[38;5;11m(4 Retries left)
