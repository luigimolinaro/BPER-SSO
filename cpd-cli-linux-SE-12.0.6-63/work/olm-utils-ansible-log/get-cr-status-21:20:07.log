2023-07-20 21:20:07,897 p=6329 u=ansible n=ansible | [WARNING]: No inventory was parsed, only implicit localhost is available

2023-07-20 21:20:07,903 p=6329 u=ansible n=ansible | [WARNING]: provided hosts list is empty, only localhost is available. Note that
the implicit localhost does not match 'all'

2023-07-20 21:20:08,022 p=6329 u=ansible n=ansible | PLAY [localhost] ***************************************************************
2023-07-20 21:20:08,073 p=6329 u=ansible n=ansible | TASK [include_role : utils] ****************************************************
2023-07-20 21:20:08,134 p=6329 u=ansible n=ansible | TASK [utils : include_vars] ****************************************************
2023-07-20 21:20:08,292 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:08,302 p=6329 u=ansible n=ansible | TASK [utils : include_vars] ****************************************************
2023-07-20 21:20:08,405 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:08,417 p=6329 u=ansible n=ansible | TASK [utils : debug] ***********************************************************
2023-07-20 21:20:08,475 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:08,488 p=6329 u=ansible n=ansible | TASK [utils : fail] ************************************************************
2023-07-20 21:20:08,574 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:08,586 p=6329 u=ansible n=ansible | TASK [utils : merging release_components_meta and global_components_meta] ******
2023-07-20 21:20:08,787 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:08,792 p=6329 u=ansible n=ansible | TASK [utils : merge with override_components_meta] *****************************
2023-07-20 21:20:08,842 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:08,847 p=6329 u=ansible n=ansible | TASK [utils : merge with override_components_meta] *****************************
2023-07-20 21:20:09,034 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:09,045 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:09,096 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:09,102 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:09,150 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:09,155 p=6329 u=ansible n=ansible | TASK [utils : check openshift cluster status] **********************************
2023-07-20 21:20:09,209 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/check_cluster_healthy.yml for localhost
2023-07-20 21:20:09,221 p=6329 u=ansible n=ansible | TASK [utils : checking ocp cluster connection status] **************************
2023-07-20 21:20:10,296 p=6329 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:20:10,308 p=6329 u=ansible n=ansible | TASK [utils : fail] ************************************************************
2023-07-20 21:20:10,357 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:10,362 p=6329 u=ansible n=ansible | TASK [utils : get cluster arch] ************************************************
2023-07-20 21:20:11,427 p=6382 u=ansible n=ansible | [WARNING]: conditional statements should not include jinja2 templating
delimiters such as {{ }} or {% %}. Found: {{ (kube_arch.stdout |
from_json)['serverVersion'] is defined }}

2023-07-20 21:20:11,453 p=6329 u=ansible n=ansible | changed: [localhost]
2023-07-20 21:20:11,465 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:11,560 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:11,566 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:11,618 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:11,624 p=6329 u=ansible n=ansible | TASK [utils : include_tasks] ***************************************************
2023-07-20 21:20:11,675 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:11,680 p=6329 u=ansible n=ansible | TASK [utils : debug] ***********************************************************
2023-07-20 21:20:11,702 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:11,707 p=6329 u=ansible n=ansible | TASK [utils : Print trace information] *****************************************
2023-07-20 21:20:12,467 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:12,472 p=6329 u=ansible n=ansible | TASK [utils : remove any existing generated preview sh script] *****************
2023-07-20 21:20:12,544 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:12,553 p=6329 u=ansible n=ansible | TASK [utils : remove any existing generated preview yaml file] *****************
2023-07-20 21:20:12,623 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:12,673 p=6329 u=ansible n=ansible | TASK [utils : Create CPFS namespace if not present ibm-common-services] ********
2023-07-20 21:20:12,707 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:12,719 p=6329 u=ansible n=ansible | TASK [utils : Create cpd operator namespace if not present ibm-common-services] ***
2023-07-20 21:20:12,753 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:12,762 p=6329 u=ansible n=ansible | TASK [utils : ensure operator group for ibm-common-services namespace] *********
2023-07-20 21:20:12,795 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:12,807 p=6329 u=ansible n=ansible | TASK [utils : ensure operator group for ibm-common-services namespace] *********
2023-07-20 21:20:12,837 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:12,842 p=6329 u=ansible n=ansible | TASK [include_role : utils] ****************************************************
2023-07-20 21:20:12,899 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:12,922 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:12,928 p=6329 u=ansible n=ansible | TASK [utils : checking the status of all CRs] **********************************
2023-07-20 21:20:13,742 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=redis)
2023-07-20 21:20:13,749 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=factsheet)
2023-07-20 21:20:13,761 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=replication)
2023-07-20 21:20:13,769 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=dpra)
2023-07-20 21:20:13,778 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=estap)
2023-07-20 21:20:13,785 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=ws_pipelines)
2023-07-20 21:20:13,793 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=model_train_classic)
2023-07-20 21:20:13,801 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=model_train_dwf)
2023-07-20 21:20:13,808 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=model_train)
2023-07-20 21:20:13,816 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=data_governor)
2023-07-20 21:20:13,827 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=watson_gateway)
2023-07-20 21:20:13,835 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=opencontent_auditwebhook)
2023-07-20 21:20:13,843 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=opencontent_etcd)
2023-07-20 21:20:13,851 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=opencontent_minio)
2023-07-20 21:20:13,861 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=ws_runtimes)
2023-07-20 21:20:13,870 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=watson_speech)
2023-07-20 21:20:13,878 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=wml_accelerator_instance)
2023-07-20 21:20:13,884 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=wml_accelerator)
2023-07-20 21:20:13,893 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=watson_ks)
2023-07-20 21:20:13,901 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=watson_discovery)
2023-07-20 21:20:13,909 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=watson_assistant)
2023-07-20 21:20:13,919 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=voice_gateway)
2023-07-20 21:20:13,928 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=productmaster_instance)
2023-07-20 21:20:13,936 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=productmaster)
2023-07-20 21:20:13,944 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=planning_analytics)
2023-07-20 21:20:13,954 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=openpages_instance)
2023-07-20 21:20:14,012 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=openpages)
2023-07-20 21:20:14,023 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=mongodb_cp4d)
2023-07-20 21:20:14,032 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=mongodb)
2023-07-20 21:20:14,039 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=informix_cp4d)
2023-07-20 21:20:14,047 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=informix)
2023-07-20 21:20:14,055 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=fdb_k8s)
2023-07-20 21:20:14,063 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=opencontent_fdb)
2023-07-20 21:20:14,072 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=opencontent_rabbitmq)
2023-07-20 21:20:14,080 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=opencontent_redis)
2023-07-20 21:20:14,088 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=opencontent_elasticsearch)
2023-07-20 21:20:14,096 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=match360)
2023-07-20 21:20:14,103 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=hee)
2023-07-20 21:20:14,112 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=edb_cp4d)
2023-07-20 21:20:14,119 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=postgresql)
2023-07-20 21:20:14,127 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=dods)
2023-07-20 21:20:14,137 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=db2wh)
2023-07-20 21:20:14,144 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=datagate)
2023-07-20 21:20:14,153 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=bigsql)
2023-07-20 21:20:14,161 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=db2oltp)
2023-07-20 21:20:14,171 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=datastage_ent_plus)
2023-07-20 21:20:14,179 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=datastage_ent)
2023-07-20 21:20:14,190 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=dashboard)
2023-07-20 21:20:14,200 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=cde)
2023-07-20 21:20:14,209 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=cognos_analytics)
2023-07-20 21:20:14,216 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=openscale)
2023-07-20 21:20:14,223 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=dv)
2023-07-20 21:20:14,230 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=dp)
2023-07-20 21:20:14,237 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=wkc)
2023-07-20 21:20:14,243 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=wml)
2023-07-20 21:20:14,250 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=rstudio)
2023-07-20 21:20:14,258 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=spss)
2023-07-20 21:20:14,268 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=ws)
2023-07-20 21:20:14,279 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=db2aaservice)
2023-07-20 21:20:14,290 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=db2u)
2023-07-20 21:20:14,302 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=dmc)
2023-07-20 21:20:14,313 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=mantaflow)
2023-07-20 21:20:14,325 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=iis)
2023-07-20 21:20:14,336 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=datarefinery)
2023-07-20 21:20:14,347 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=analyticsengine)
2023-07-20 21:20:14,357 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=ccs)
2023-07-20 21:20:14,368 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=cpd_platform)
2023-07-20 21:20:14,380 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=scheduler)
2023-07-20 21:20:14,391 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=zen)
2023-07-20 21:20:14,401 p=6329 u=ansible n=ansible | included: /opt/ansible/ansible-play/roles/utils/tasks/get_status_cr.yml for localhost => (item=cpfs)
2023-07-20 21:20:14,428 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:23,384 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:23,390 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:23,465 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:23,480 p=6329 u=ansible n=ansible | TASK [utils : check CR status for redis if it exists] **************************
2023-07-20 21:20:23,521 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:23,528 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:23,605 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:23,630 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:23,684 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:23,689 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:23,738 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:23,755 p=6329 u=ansible n=ansible | TASK [utils : check CR status for FACTSHEET if it exists] **********************
2023-07-20 21:20:26,585 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:26,590 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:26,656 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:26,723 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:26,738 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:26,790 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:26,815 p=6329 u=ansible n=ansible | TASK [utils : check CR status for ReplicationService if it exists] *************
2023-07-20 21:20:29,564 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:29,570 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:29,617 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:29,658 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:29,663 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:29,705 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:29,720 p=6329 u=ansible n=ansible | TASK [utils : check CR status for DpraService if it exists] ********************
2023-07-20 21:20:32,511 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:32,523 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:32,569 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:32,614 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:32,619 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:32,679 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:32,716 p=6329 u=ansible n=ansible | TASK [utils : check CR status for EstapServiceCPDAddOn if it exists] ***********
2023-07-20 21:20:35,498 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:35,504 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:35,554 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:35,609 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:35,620 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:35,681 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:35,698 p=6329 u=ansible n=ansible | TASK [utils : check CR status for WSPipelines if it exists] ********************
2023-07-20 21:20:38,509 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:38,516 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:38,589 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:38,636 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:38,643 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:38,693 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:38,719 p=6329 u=ansible n=ansible | TASK [utils : check CR status for model_train_classic if it exists] ************
2023-07-20 21:20:38,791 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:38,798 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:38,869 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:38,895 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:38,958 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:38,970 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:39,033 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,048 p=6329 u=ansible n=ansible | TASK [utils : check CR status for model_train_dwf if it exists] ****************
2023-07-20 21:20:39,094 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,102 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:39,149 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,163 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:39,213 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,219 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:39,252 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,266 p=6329 u=ansible n=ansible | TASK [utils : check CR status for model_train if it exists] ********************
2023-07-20 21:20:39,328 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,335 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:39,388 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,416 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:39,459 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,467 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:39,501 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,520 p=6329 u=ansible n=ansible | TASK [utils : check CR status for data_governor if it exists] ******************
2023-07-20 21:20:39,564 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,570 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:39,615 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,629 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:39,661 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,666 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:39,719 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,756 p=6329 u=ansible n=ansible | TASK [utils : check CR status for watson_gateway if it exists] *****************
2023-07-20 21:20:39,843 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,856 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:39,936 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:39,962 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:40,023 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,029 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:40,061 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,077 p=6329 u=ansible n=ansible | TASK [utils : check CR status for opencontent_auditwebhook if it exists] *******
2023-07-20 21:20:40,144 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,150 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:40,198 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,214 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:40,267 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,274 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:40,331 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,366 p=6329 u=ansible n=ansible | TASK [utils : check CR status for opencontent_etcd if it exists] ***************
2023-07-20 21:20:40,442 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,453 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:40,501 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,515 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:40,564 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,570 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:40,622 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,658 p=6329 u=ansible n=ansible | TASK [utils : check CR status for opencontent_minio if it exists] **************
2023-07-20 21:20:40,726 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,731 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:40,801 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,828 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:40,869 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,877 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:40,918 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:40,945 p=6329 u=ansible n=ansible | TASK [utils : check CR status for NotebookRuntime if it exists] ****************
2023-07-20 21:20:42,682 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:42,688 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:42,739 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:42,769 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:42,774 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:42,828 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:42,862 p=6329 u=ansible n=ansible | TASK [utils : check CR status for WatsonSpeech if it exists] *******************
2023-07-20 21:20:45,666 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:45,681 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:45,753 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:45,799 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:45,804 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:45,837 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:45,855 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Wmla if it exists] ***************************
2023-07-20 21:20:49,076 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:49,089 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:49,138 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:49,168 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:49,173 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:49,205 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:49,220 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Wmla-add-on if it exists] ********************
2023-07-20 21:20:51,976 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:51,981 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:52,032 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:52,092 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:52,102 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:52,150 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:52,167 p=6329 u=ansible n=ansible | TASK [utils : check CR status for KnowledgeStudio if it exists] ****************
2023-07-20 21:20:56,175 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:56,187 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:56,268 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:56,324 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:56,336 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:56,388 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:56,404 p=6329 u=ansible n=ansible | TASK [utils : check CR status for WatsonDiscovery if it exists] ****************
2023-07-20 21:20:59,158 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:20:59,165 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:20:59,204 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:20:59,263 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:59,272 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:20:59,327 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:20:59,357 p=6329 u=ansible n=ansible | TASK [utils : check CR status for WatsonAssistant if it exists] ****************
2023-07-20 21:21:02,122 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:02,140 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:02,217 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:02,268 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:02,280 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:02,330 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:02,360 p=6329 u=ansible n=ansible | TASK [utils : check CR status for VoiceGateway if it exists] *******************
2023-07-20 21:21:05,239 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:05,246 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:05,297 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:05,328 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:05,333 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:05,367 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:05,404 p=6329 u=ansible n=ansible | TASK [utils : check CR status for ProductMaster if it exists] ******************
2023-07-20 21:21:08,204 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:08,216 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:08,303 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:08,348 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:08,353 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:08,415 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:08,448 p=6329 u=ansible n=ansible | TASK [utils : check CR status for ProductMasterService if it exists] ***********
2023-07-20 21:21:11,358 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:11,372 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:11,449 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:11,498 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:11,504 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:11,535 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:11,550 p=6329 u=ansible n=ansible | TASK [utils : check CR status for PAService if it exists] **********************
2023-07-20 21:21:14,237 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:14,243 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:14,313 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:14,360 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:14,366 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:14,399 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:14,412 p=6329 u=ansible n=ansible | TASK [utils : check CR status for OpenPagesInstance if it exists] **************
2023-07-20 21:21:17,273 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:17,279 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:17,331 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:17,376 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:17,381 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:17,426 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:17,441 p=6329 u=ansible n=ansible | TASK [utils : check CR status for OpenPagesService if it exists] ***************
2023-07-20 21:21:20,238 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:20,244 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:20,298 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:20,347 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:20,352 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:20,397 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:20,413 p=6329 u=ansible n=ansible | TASK [utils : check CR status for CPDMongoDBService if it exists] **************
2023-07-20 21:21:23,141 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:23,153 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:23,219 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:23,265 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:23,270 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:23,324 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:23,361 p=6329 u=ansible n=ansible | TASK [utils : check CR status for mongodb if it exists] ************************
2023-07-20 21:21:23,440 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:23,453 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:23,534 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:23,565 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:23,628 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:23,636 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:23,670 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:23,684 p=6329 u=ansible n=ansible | TASK [utils : check CR status for InformixService if it exists] ****************
2023-07-20 21:21:26,928 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:26,939 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:26,988 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:27,024 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:27,030 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:27,065 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:27,081 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Informix if it exists] ***********************
2023-07-20 21:21:29,869 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:29,883 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:29,939 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:29,988 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:29,995 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:30,044 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:30,060 p=6329 u=ansible n=ansible | TASK [utils : check CR status for fdb_k8s if it exists] ************************
2023-07-20 21:21:30,127 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:30,141 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:30,190 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:30,209 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:30,247 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:30,254 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:30,292 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:30,315 p=6329 u=ansible n=ansible | TASK [utils : check CR status for fdbcluster if it exists] *********************
2023-07-20 21:21:33,101 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:33,114 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:33,192 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:33,225 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,229 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:33,261 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,276 p=6329 u=ansible n=ansible | TASK [utils : check CR status for opencontent_rabbitmq if it exists] ***********
2023-07-20 21:21:33,317 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,323 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:33,373 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,400 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:33,459 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,472 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:33,507 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,523 p=6329 u=ansible n=ansible | TASK [utils : check CR status for opencontent_redis if it exists] **************
2023-07-20 21:21:33,596 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,608 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:33,670 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,694 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:33,725 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,730 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:33,795 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,814 p=6329 u=ansible n=ansible | TASK [utils : check CR status for opencontent_elasticsearch if it exists] ******
2023-07-20 21:21:33,851 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,857 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:33,898 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,912 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:33,969 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:33,980 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:34,039 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:34,063 p=6329 u=ansible n=ansible | TASK [utils : check CR status for MasterDataManagement if it exists] ***********
2023-07-20 21:21:36,956 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:36,968 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:37,039 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:37,088 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:37,097 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:37,150 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:37,181 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Hadoop if it exists] *************************
2023-07-20 21:21:39,939 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:39,951 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:39,998 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:40,031 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:40,036 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:40,067 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:40,083 p=6329 u=ansible n=ansible | TASK [utils : check CR status for CPDEdbService if it exists] ******************
2023-07-20 21:21:42,880 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:42,895 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:42,946 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:42,985 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:42,990 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:43,032 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:43,048 p=6329 u=ansible n=ansible | TASK [utils : check CR status for postgresql if it exists] *********************
2023-07-20 21:21:43,100 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:43,106 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:43,164 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:43,190 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:43,244 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:43,253 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:43,298 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:43,325 p=6329 u=ansible n=ansible | TASK [utils : check CR status for DODS if it exists] ***************************
2023-07-20 21:21:46,046 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:46,056 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:46,114 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:46,158 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:46,163 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:46,207 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:46,225 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Db2whService if it exists] *******************
2023-07-20 21:21:49,026 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:49,032 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:49,100 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:49,139 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:49,148 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:49,202 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:49,230 p=6329 u=ansible n=ansible | TASK [utils : check CR status for DatagateService if it exists] ****************
2023-07-20 21:21:52,027 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:52,033 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:52,086 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:52,141 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:52,152 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:52,211 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:52,243 p=6329 u=ansible n=ansible | TASK [utils : check CR status for BigsqlService if it exists] ******************
2023-07-20 21:21:55,043 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:55,049 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:55,100 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:55,153 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:55,162 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:55,200 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:55,215 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Db2oltpService if it exists] *****************
2023-07-20 21:21:58,058 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:21:58,065 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:21:58,109 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:21:58,163 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:58,176 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:21:58,225 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:21:58,260 p=6329 u=ansible n=ansible | TASK [utils : check CR status for DataStage if it exists] **********************
2023-07-20 21:22:01,064 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:01,078 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:01,163 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:01,221 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:01,226 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:01,279 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:01,295 p=6329 u=ansible n=ansible | TASK [utils : check CR status for DataStage if it exists] **********************
2023-07-20 21:22:03,997 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:04,010 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:04,079 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:04,116 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:04,122 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:04,164 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:04,198 p=6329 u=ansible n=ansible | TASK [utils : check CR status for dashboardservice if it exists] ***************
2023-07-20 21:22:07,211 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:07,223 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:07,300 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:07,348 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:07,353 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:07,384 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:07,399 p=6329 u=ansible n=ansible | TASK [utils : check CR status for CdeProxyService if it exists] ****************
2023-07-20 21:22:10,206 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:10,216 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:10,271 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:10,305 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:10,310 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:10,362 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:10,397 p=6329 u=ansible n=ansible | TASK [utils : check CR status for CAService if it exists] **********************
2023-07-20 21:22:13,183 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:13,189 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:13,226 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:13,255 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:13,260 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:13,303 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:13,319 p=6329 u=ansible n=ansible | TASK [utils : check CR status for WOService if it exists] **********************
2023-07-20 21:22:16,092 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:16,099 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:16,172 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:16,211 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:16,217 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:16,275 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:16,296 p=6329 u=ansible n=ansible | TASK [utils : check CR status for DvService if it exists] **********************
2023-07-20 21:22:19,160 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:19,172 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:19,228 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:19,271 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:19,276 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:19,330 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:19,364 p=6329 u=ansible n=ansible | TASK [utils : check CR status for DP if it exists] *****************************
2023-07-20 21:22:22,293 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:22,298 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:22,351 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:22,379 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:22,385 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:22,416 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:22,433 p=6329 u=ansible n=ansible | TASK [utils : check CR status for WKC if it exists] ****************************
2023-07-20 21:22:25,544 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:25,557 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:25,630 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:25,675 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:25,682 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:25,732 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:25,749 p=6329 u=ansible n=ansible | TASK [utils : check CR status for WmlBase if it exists] ************************
2023-07-20 21:22:28,440 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:28,453 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:28,528 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:28,564 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:28,572 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:28,600 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:28,616 p=6329 u=ansible n=ansible | TASK [utils : check CR status for RStudioAddon if it exists] *******************
2023-07-20 21:22:31,381 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:31,395 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:31,468 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:31,510 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:31,521 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:31,566 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:31,599 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Spss if it exists] ***************************
2023-07-20 21:22:33,339 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:33,345 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:33,415 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:33,471 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:33,476 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:33,530 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:33,560 p=6329 u=ansible n=ansible | TASK [utils : check CR status for WS if it exists] *****************************
2023-07-20 21:22:35,071 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:35,077 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:35,145 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:35,214 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:35,228 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:35,265 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:35,284 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Db2aaserviceService if it exists] ************
2023-07-20 21:22:37,964 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:37,978 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:38,035 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:38,074 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:38,080 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:38,115 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:38,129 p=6329 u=ansible n=ansible | TASK [utils : check CR status for db2u if it exists] ***************************
2023-07-20 21:22:38,180 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:38,186 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:38,237 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:38,268 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:38,311 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:38,316 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:38,355 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:38,370 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Dmcaddon if it exists] ***********************
2023-07-20 21:22:41,148 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:41,155 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:41,217 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:41,273 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,283 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:41,333 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,350 p=6329 u=ansible n=ansible | TASK [utils : check CR status for mantaflow if it exists] **********************
2023-07-20 21:22:41,407 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,412 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:41,482 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,513 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:41,560 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,569 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:41,625 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,649 p=6329 u=ansible n=ansible | TASK [utils : check CR status for iis if it exists] ****************************
2023-07-20 21:22:41,723 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,735 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:41,818 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,850 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:41,903 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,909 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:41,944 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:41,962 p=6329 u=ansible n=ansible | TASK [utils : check CR status for DataRefinery if it exists] *******************
2023-07-20 21:22:43,577 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:43,590 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:43,671 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:43,731 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:43,736 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:43,793 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:43,808 p=6329 u=ansible n=ansible | TASK [utils : check CR status for AnalyticsEngine if it exists] ****************
2023-07-20 21:22:46,746 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:46,760 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:46,844 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:46,900 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:46,910 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:46,975 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:47,008 p=6329 u=ansible n=ansible | TASK [utils : check CR status for CCS if it exists] ****************************
2023-07-20 21:22:48,681 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:48,687 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:48,727 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:22:48,758 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:48,763 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:48,794 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:48,811 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Ibmcpd if it exists] *************************
2023-07-20 21:22:50,544 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:50,559 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:50,640 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access ibm-common-services] *****
2023-07-20 21:22:59,704 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:22:59,709 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:22:59,768 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:59,803 p=6329 u=ansible n=ansible | TASK [utils : check CR status for Scheduling if it exists] *********************
2023-07-20 21:22:59,863 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:59,875 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:22:59,943 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:22:59,970 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:23:00,029 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:23:00,037 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:23:00,086 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:23:00,121 p=6329 u=ansible n=ansible | TASK [utils : check CR status for ZenService if it exists] *********************
2023-07-20 21:23:03,235 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:23:03,250 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:23:03,315 p=6329 u=ansible n=ansible | TASK [utils : Check if user have permission to access cp4d] ********************
2023-07-20 21:23:03,376 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:23:03,390 p=6329 u=ansible n=ansible | TASK [utils : set_fact] ********************************************************
2023-07-20 21:23:03,452 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:23:03,473 p=6329 u=ansible n=ansible | TASK [utils : check CR status for cpfs if it exists] ***************************
2023-07-20 21:23:03,545 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:23:03,550 p=6329 u=ansible n=ansible | TASK [utils : for all CRs that were found] *************************************
2023-07-20 21:23:03,612 p=6329 u=ansible n=ansible | skipping: [localhost]
2023-07-20 21:23:03,621 p=6329 u=ansible n=ansible | TASK [utils : checking the status of all CRs for tethered namespace {{ tethered_instance_ns }}] ***
2023-07-20 21:23:03,673 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=redis) 
2023-07-20 21:23:03,682 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=factsheet) 
2023-07-20 21:23:03,691 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=replication) 
2023-07-20 21:23:03,697 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=dpra) 
2023-07-20 21:23:03,709 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=estap) 
2023-07-20 21:23:03,720 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=ws_pipelines) 
2023-07-20 21:23:03,735 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=model_train_classic) 
2023-07-20 21:23:03,746 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=model_train_dwf) 
2023-07-20 21:23:03,756 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=model_train) 
2023-07-20 21:23:03,764 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=data_governor) 
2023-07-20 21:23:03,776 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=watson_gateway) 
2023-07-20 21:23:03,785 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=opencontent_auditwebhook) 
2023-07-20 21:23:03,795 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=opencontent_etcd) 
2023-07-20 21:23:03,805 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=opencontent_minio) 
2023-07-20 21:23:03,815 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=ws_runtimes) 
2023-07-20 21:23:03,826 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=watson_speech) 
2023-07-20 21:23:03,834 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=wml_accelerator_instance) 
2023-07-20 21:23:03,842 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=wml_accelerator) 
2023-07-20 21:23:03,852 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=watson_ks) 
2023-07-20 21:23:03,862 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=watson_discovery) 
2023-07-20 21:23:03,871 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=watson_assistant) 
2023-07-20 21:23:03,878 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=voice_gateway) 
2023-07-20 21:23:03,884 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=productmaster_instance) 
2023-07-20 21:23:03,894 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=productmaster) 
2023-07-20 21:23:03,903 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=planning_analytics) 
2023-07-20 21:23:03,914 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=openpages_instance) 
2023-07-20 21:23:03,929 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=openpages) 
2023-07-20 21:23:03,936 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=mongodb_cp4d) 
2023-07-20 21:23:03,941 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=mongodb) 
2023-07-20 21:23:03,949 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=informix_cp4d) 
2023-07-20 21:23:03,959 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=informix) 
2023-07-20 21:23:03,969 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=fdb_k8s) 
2023-07-20 21:23:03,977 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=opencontent_fdb) 
2023-07-20 21:23:03,987 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=opencontent_rabbitmq) 
2023-07-20 21:23:03,995 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=opencontent_redis) 
2023-07-20 21:23:04,004 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=opencontent_elasticsearch) 
2023-07-20 21:23:04,014 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=match360) 
2023-07-20 21:23:04,022 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=hee) 
2023-07-20 21:23:04,032 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=edb_cp4d) 
2023-07-20 21:23:04,041 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=postgresql) 
2023-07-20 21:23:04,050 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=dods) 
2023-07-20 21:23:04,059 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=db2wh) 
2023-07-20 21:23:04,072 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=datagate) 
2023-07-20 21:23:04,126 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=bigsql) 
2023-07-20 21:23:04,135 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=db2oltp) 
2023-07-20 21:23:04,144 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=datastage_ent_plus) 
2023-07-20 21:23:04,152 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=datastage_ent) 
2023-07-20 21:23:04,161 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=dashboard) 
2023-07-20 21:23:04,171 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=cde) 
2023-07-20 21:23:04,178 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=cognos_analytics) 
2023-07-20 21:23:04,187 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=openscale) 
2023-07-20 21:23:04,197 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=dv) 
2023-07-20 21:23:04,208 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=dp) 
2023-07-20 21:23:04,219 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=wkc) 
2023-07-20 21:23:04,229 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=wml) 
2023-07-20 21:23:04,239 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=rstudio) 
2023-07-20 21:23:04,248 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=spss) 
2023-07-20 21:23:04,260 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=ws) 
2023-07-20 21:23:04,269 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=db2aaservice) 
2023-07-20 21:23:04,280 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=db2u) 
2023-07-20 21:23:04,288 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=dmc) 
2023-07-20 21:23:04,298 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=mantaflow) 
2023-07-20 21:23:04,312 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=iis) 
2023-07-20 21:23:04,324 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=datarefinery) 
2023-07-20 21:23:04,334 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=analyticsengine) 
2023-07-20 21:23:04,340 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=ccs) 
2023-07-20 21:23:04,349 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=cpd_platform) 
2023-07-20 21:23:04,361 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=scheduler) 
2023-07-20 21:23:04,371 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=zen) 
2023-07-20 21:23:04,380 p=6329 u=ansible n=ansible | skipping: [localhost] => (item=cpfs) 
2023-07-20 21:23:04,390 p=6329 u=ansible n=ansible | TASK [utils : remove duplicate items] ******************************************
2023-07-20 21:23:04,423 p=6329 u=ansible n=ansible | ok: [localhost]
2023-07-20 21:23:04,433 p=6329 u=ansible n=ansible | PLAY RECAP *********************************************************************
2023-07-20 21:23:04,433 p=6329 u=ansible n=ansible | localhost                  : ok=134  changed=2    unreachable=0    failed=0    skipped=243  rescued=0    ignored=0   
